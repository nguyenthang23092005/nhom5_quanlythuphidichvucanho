
package com.apartmentservice.view.admin;
/**
 *
 * @author Nguyen Van Thang, Pham Van Su, Dang Anh Tuyen
 */

import com.apartmentservice.controller.ServiceController;
import com.apartmentservice.model.Service;
import com.apartmentservice.utils.FormSwitcher;
import com.apartmentservice.utils.Validator;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;


public class DichVuForm extends javax.swing.JFrame {
    private final ServiceController controller;
    private DefaultTableModel tableModel;
    private String loggedInUsername;
    public DichVuForm(String username) {
        initComponents();
        setTitle("Quản Lý Dịch Vụ");
        loggedInUsername = username;
        controller = new ServiceController();
        tableModel = (DefaultTableModel) DanhSachDichVu.getModel();
        DanhSachDichVu.getSelectionModel().addListSelectionListener(e -> {
            // Đảm bảo chỉ xử lý khi việc chọn dòng hoàn tất (không phải khi đang thay đổi)
            if (!e.getValueIsAdjusting()) {
                int selectedRow = DanhSachDichVu.getSelectedRow();
                if (selectedRow >= 0) {
                    // Lấy dữ liệu từ bảng, cột tương ứng (cẩn thận vì có thể bảng đã sắp xếp => dùng convertRowIndexToModel)
                    int modelRow = DanhSachDichVu.convertRowIndexToModel(selectedRow);
                    String serviceName = (String) tableModel.getValueAt(modelRow, 2); // cột Tên dịch vụ
                    String unitPriceStr = String.valueOf(tableModel.getValueAt(modelRow, 3)); // cột Đơn giá
                    String unit = (String) tableModel.getValueAt(modelRow, 4); // cột Đơn vị tính
                    String note = (String) tableModel.getValueAt(modelRow, 5); // cột Ghi chú

                    txtTenDichVu.setText(serviceName);
                    txtDonGia.setText(unitPriceStr);
                    txtDonViTinh.setText(unit);
                    txtGhiChu.setText(note);
                }
            }
        });
        loadTable();
        DefaultTableCellRenderer leftRenderer = new DefaultTableCellRenderer();
        leftRenderer.setHorizontalAlignment(SwingConstants.LEFT);
        for (int i = 0; i < DanhSachDichVu.getColumnCount(); i++) {
            DanhSachDichVu.getColumnModel().getColumn(i).setCellRenderer(leftRenderer);
        }
    }
    private void loadTable() {
        tableModel.setRowCount(0); 

        List<Service> services = controller.getAllServices();
        int stt = 1;
        for (Service s : services) {
            tableModel.addRow(new Object[]{
                stt++,                   
                s.getServiceID(),        
                s.getServiceName(),          
                s.getFormattedUnitPrice(),
                s.getUnit(),         
                s.getNote()        
            });
        }
    }
    private void clearForm() {
        txtTenDichVu.setText("");
        txtDonGia.setText("");
        txtDonViTinh.setText("");
        txtGhiChu.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        butQuanLyCanHo = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        butDanhSachCuDan = new javax.swing.JButton();
        butQuanLyHoaDon = new javax.swing.JButton();
        butQuanLyDichVu = new javax.swing.JButton();
        butThongTinToaNha = new javax.swing.JButton();
        butHinhThucThanhToan = new javax.swing.JButton();
        butDangXuat = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        butThongKe = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        txtDonViTinh = new javax.swing.JTextField();
        txtGhiChu = new javax.swing.JTextField();
        txtTenDichVu = new javax.swing.JTextField();
        lbTenDichVu = new javax.swing.JLabel();
        lbDonViTinh = new javax.swing.JLabel();
        txtDonGia = new javax.swing.JTextField();
        lbDonGia = new javax.swing.JLabel();
        lbGhiChu = new javax.swing.JLabel();
        butClear = new javax.swing.JButton();
        butSapXep = new javax.swing.JButton();
        butThem = new javax.swing.JButton();
        butCapNhat = new javax.swing.JButton();
        butXoa = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        DanhSachDichVu = new javax.swing.JTable();
        butTimKiem = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        butLamMoi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1265, 720));

        jPanel3.setBackground(new java.awt.Color(0, 51, 102));
        jPanel3.setPreferredSize(new java.awt.Dimension(225, 720));

        butQuanLyCanHo.setBackground(new java.awt.Color(0, 51, 102));
        butQuanLyCanHo.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        butQuanLyCanHo.setForeground(new java.awt.Color(255, 255, 255));
        butQuanLyCanHo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/apartmentservice/icons/1.png"))); // NOI18N
        butQuanLyCanHo.setText(" Quản Lý Căn Hộ");
        butQuanLyCanHo.setBorderPainted(false);
        butQuanLyCanHo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        butQuanLyCanHo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butQuanLyCanHoActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 102, 51));
        jLabel3.setText("Hello, Admin!");

        butDanhSachCuDan.setBackground(new java.awt.Color(0, 51, 102));
        butDanhSachCuDan.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        butDanhSachCuDan.setForeground(new java.awt.Color(255, 255, 255));
        butDanhSachCuDan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/apartmentservice/icons/3.png"))); // NOI18N
        butDanhSachCuDan.setText("  Danh Sách Cư Dân");
        butDanhSachCuDan.setBorderPainted(false);
        butDanhSachCuDan.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        butDanhSachCuDan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butDanhSachCuDanActionPerformed(evt);
            }
        });

        butQuanLyHoaDon.setBackground(new java.awt.Color(0, 51, 102));
        butQuanLyHoaDon.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        butQuanLyHoaDon.setForeground(new java.awt.Color(255, 255, 255));
        butQuanLyHoaDon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/apartmentservice/icons/2.png"))); // NOI18N
        butQuanLyHoaDon.setText("  Quản Lý Hóa Đơn");
        butQuanLyHoaDon.setBorderPainted(false);
        butQuanLyHoaDon.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        butQuanLyHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butQuanLyHoaDonActionPerformed(evt);
            }
        });

        butQuanLyDichVu.setBackground(new java.awt.Color(0, 51, 102));
        butQuanLyDichVu.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        butQuanLyDichVu.setForeground(new java.awt.Color(255, 255, 255));
        butQuanLyDichVu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/apartmentservice/icons/4.png"))); // NOI18N
        butQuanLyDichVu.setText("   Quản Lý Dịch Vụ");
        butQuanLyDichVu.setBorderPainted(false);
        butQuanLyDichVu.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        butQuanLyDichVu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butQuanLyDichVuActionPerformed(evt);
            }
        });

        butThongTinToaNha.setBackground(new java.awt.Color(0, 51, 102));
        butThongTinToaNha.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        butThongTinToaNha.setForeground(new java.awt.Color(255, 255, 255));
        butThongTinToaNha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/apartmentservice/icons/5.png"))); // NOI18N
        butThongTinToaNha.setText(" Thông Tin Tòa Nhà");
        butThongTinToaNha.setBorderPainted(false);
        butThongTinToaNha.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        butThongTinToaNha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butThongTinToaNhaActionPerformed(evt);
            }
        });

        butHinhThucThanhToan.setBackground(new java.awt.Color(0, 51, 102));
        butHinhThucThanhToan.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        butHinhThucThanhToan.setForeground(new java.awt.Color(255, 255, 255));
        butHinhThucThanhToan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/apartmentservice/icons/6.png"))); // NOI18N
        butHinhThucThanhToan.setText("Hình Thức Thanh Toán");
        butHinhThucThanhToan.setBorderPainted(false);
        butHinhThucThanhToan.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        butHinhThucThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butHinhThucThanhToanActionPerformed(evt);
            }
        });

        butDangXuat.setText("Đăng Xuất");
        butDangXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butDangXuatActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/apartmentservice/icons/logo.png"))); // NOI18N

        butThongKe.setBackground(new java.awt.Color(0, 51, 102));
        butThongKe.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        butThongKe.setForeground(new java.awt.Color(255, 255, 255));
        butThongKe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/apartmentservice/icons/7.png"))); // NOI18N
        butThongKe.setText("Thống Kê");
        butThongKe.setBorderPainted(false);
        butThongKe.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        butThongKe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butThongKeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                            .addComponent(butQuanLyCanHo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(butQuanLyHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(butDanhSachCuDan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(butQuanLyDichVu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(butThongTinToaNha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(butHinhThucThanhToan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(butThongKe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(butDangXuat)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(40, 40, 40)
                .addComponent(butQuanLyCanHo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(butQuanLyHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(butDanhSachCuDan, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(butQuanLyDichVu, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(butThongTinToaNha, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(butHinhThucThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(butThongKe, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(butDangXuat)
                .addGap(28, 28, 28))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(920, 650));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông Tin Dịch Vụ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        txtDonViTinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDonViTinhActionPerformed(evt);
            }
        });

        txtGhiChu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGhiChuActionPerformed(evt);
            }
        });

        txtTenDichVu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenDichVuActionPerformed(evt);
            }
        });

        lbTenDichVu.setText("Tên dịch vụ:");

        lbDonViTinh.setText("Đơn vị tính:");

        txtDonGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDonGiaActionPerformed(evt);
            }
        });

        lbDonGia.setText("Đơn giá:");

        lbGhiChu.setText("Ghi chú: ");

        butClear.setText("Clear");
        butClear.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        butClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbTenDichVu)
                    .addComponent(lbGhiChu))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTenDichVu, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                    .addComponent(txtGhiChu))
                .addGap(77, 77, 77)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(lbDonViTinh)
                        .addGap(18, 18, 18)
                        .addComponent(txtDonViTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(lbDonGia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(58, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(butClear, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(359, 359, 359))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTenDichVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTenDichVu)
                    .addComponent(lbDonGia)
                    .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtGhiChu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbGhiChu)
                    .addComponent(lbDonViTinh)
                    .addComponent(txtDonViTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(butClear)
                .addContainerGap())
        );

        butSapXep.setText("Sắp Xếp");
        butSapXep.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        butSapXep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSapXepActionPerformed(evt);
            }
        });

        butThem.setText("Thêm");
        butThem.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        butThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butThemActionPerformed(evt);
            }
        });

        butCapNhat.setText("Cập Nhật");
        butCapNhat.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        butCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCapNhatActionPerformed(evt);
            }
        });

        butXoa.setText("Xóa");
        butXoa.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        butXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butXoaActionPerformed(evt);
            }
        });

        DanhSachDichVu.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        DanhSachDichVu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã Dịch Vụ", "Tên Dịch Vụ", "Đơn Giá", "Đơn Vị Tính", "Ghi Chú"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(DanhSachDichVu);

        butTimKiem.setText("Tìm Kiếm");
        butTimKiem.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        butTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butTimKiemActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("DANH SÁCH DỊCH VỤ");

        butLamMoi.setText("Làm Mới");
        butLamMoi.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        butLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butLamMoiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(butThem, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(butCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(butXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(butSapXep, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(butTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(butLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(273, 273, 273))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(414, 414, 414)
                        .addComponent(jLabel6))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(120, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butSapXep)
                    .addComponent(butThem)
                    .addComponent(butCapNhat)
                    .addComponent(butXoa)
                    .addComponent(butTimKiem)
                    .addComponent(butLamMoi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1016, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butQuanLyCanHoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butQuanLyCanHoActionPerformed
        FormSwitcher.switchForm(this, new CanHoForm(loggedInUsername));
    }//GEN-LAST:event_butQuanLyCanHoActionPerformed

    private void butDanhSachCuDanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butDanhSachCuDanActionPerformed
        FormSwitcher.switchForm(this, new CuDanForm(loggedInUsername));
    }//GEN-LAST:event_butDanhSachCuDanActionPerformed

    private void butQuanLyHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butQuanLyHoaDonActionPerformed
        FormSwitcher.switchForm(this, new DanhSachThanhToanForm(loggedInUsername));
    }//GEN-LAST:event_butQuanLyHoaDonActionPerformed

    private void butQuanLyDichVuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butQuanLyDichVuActionPerformed
        FormSwitcher.switchForm(this, new DichVuForm(loggedInUsername));
    }//GEN-LAST:event_butQuanLyDichVuActionPerformed

    private void butThongTinToaNhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butThongTinToaNhaActionPerformed
        FormSwitcher.switchForm(this, new ToaNhaForm(loggedInUsername));
    }//GEN-LAST:event_butThongTinToaNhaActionPerformed

    private void butHinhThucThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butHinhThucThanhToanActionPerformed
        FormSwitcher.switchForm(this, new ThanhToanForm(loggedInUsername));
    }//GEN-LAST:event_butHinhThucThanhToanActionPerformed

    private void txtDonViTinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDonViTinhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDonViTinhActionPerformed

    private void txtGhiChuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGhiChuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGhiChuActionPerformed

    private void txtTenDichVuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenDichVuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenDichVuActionPerformed

    private void txtDonGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDonGiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDonGiaActionPerformed

    private void butClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butClearActionPerformed
        clearForm();
    }//GEN-LAST:event_butClearActionPerformed

    private void butSapXepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSapXepActionPerformed
        String[] criteria = {"Mã dịch vụ", "Tên dịch vụ"};
        String[] order = {"Tăng dần", "Giảm dần"};

        String selectedCriteria = (String) JOptionPane.showInputDialog(
            this,
            "Chọn tiêu chí sắp xếp:",
            "Sắp xếp dịch vụ",
            JOptionPane.QUESTION_MESSAGE,
            null,
            criteria,
            criteria[0]
        );
        if (selectedCriteria == null) return;

        String selectedOrder = (String) JOptionPane.showInputDialog(
            this,
            "Chọn thứ tự sắp xếp:",
            "Thứ tự sắp xếp",
            JOptionPane.QUESTION_MESSAGE,
            null,
            order,
            order[0]
        );
        if (selectedOrder == null) return;

        boolean ascending = selectedOrder.equals("Tăng dần");

        List<Service> sortedList = controller.sort(selectedCriteria, ascending);
        if (sortedList != null) {
            tableModel.setRowCount(0);
            int stt = 1;
            for (Service s : sortedList) {
                tableModel.addRow(new Object[]{
                    stt++,
                    s.getServiceID(),
                    s.getServiceName(),
                    s.getFormattedUnitPrice(),
                    s.getUnit(),
                    s.getNote()
                });
            }
        }
    }//GEN-LAST:event_butSapXepActionPerformed

    private void butThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butThemActionPerformed
        String name = txtTenDichVu.getText().trim();
        String priceStr = txtDonGia.getText().trim();
        String unit = txtDonViTinh.getText().trim();
        String note = txtGhiChu.getText().trim();

        // Ràng buộc dữ liệu đầu vào
        if (name.isEmpty() || unit.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ tên và đơn vị tính!");
            return;
        }
        if (!Validator.isSafeText(unit)) {
            JOptionPane.showMessageDialog(this, "Đơn vị tính không hợp lệ!");
            return;
        }
        if (!Validator.isPositiveDouble(priceStr)) {
            JOptionPane.showMessageDialog(this, "Đơn giá phải là số thực dương!");
            return;
        }
        double price = Double.parseDouble(priceStr);

        // Kiểm tra trùng tên dịch vụ trước khi thêm
        List<Service> serviceList = controller.getAllServices(); // giả sử có phương thức này
        if (serviceList != null) {
            for (Service s : serviceList) {
                if (s.getServiceName().equalsIgnoreCase(name)) {
                    JOptionPane.showMessageDialog(this, "Tên dịch vụ đã tồn tại, vui lòng nhập tên khác.");
                    return;
                }
            }
        }

        // Thêm dịch vụ vào danh sách
        controller.addService(name, price, unit, note);

        // Load lại bảng và xoá form
        loadTable();
        clearForm();
    }//GEN-LAST:event_butThemActionPerformed

    private void butCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCapNhatActionPerformed
        // Lấy danh sách mã dịch vụ hiện có
        List<String> idList = controller.getAllServiceIDs();
        if (idList == null || idList.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không có dịch vụ nào để cập nhật!");
            return;
        }
        String[] idArray = idList.toArray(new String[0]);
        // Hiện hộp thoại chọn mã dịch vụ
        String id = (String) JOptionPane.showInputDialog(
            this,
            "Chọn mã dịch vụ cần cập nhật:",
            "Chọn mã dịch vụ",
            JOptionPane.QUESTION_MESSAGE,
            null,
            idArray,
            idArray[0]
        );
        if (id == null) {
            return;
        }
        Service existing = controller.findByID(id);
        if (existing == null) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy mã dịch vụ: " + id);
            return;
        }
        String name = txtTenDichVu.getText().trim();
        String priceStr = txtDonGia.getText().trim();
        String unit = txtDonViTinh.getText().trim();
        String note = txtGhiChu.getText().trim();

        if (name.isEmpty() || unit.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ tên và đơn vị tính!");
            return;
        }
        if (!Validator.isSafeText(unit)) {
            JOptionPane.showMessageDialog(this, "Đơn vị tính không hợp lệ!");
            return;
        }
        if (!Validator.isPositiveDouble(priceStr)) {
            JOptionPane.showMessageDialog(this, "Đơn giá phải là số thực dương!");
            return;
        }
        double price = Double.parseDouble(priceStr);

        // Kiểm tra trùng tên dịch vụ với dịch vụ khác (ngoại trừ dịch vụ hiện tại)
        List<Service> serviceList = controller.getAllServices(); // Giả sử có phương thức này
        if (serviceList != null) {
            for (Service s : serviceList) {
                if (!s.getServiceID().equals(id) && s.getServiceName().equalsIgnoreCase(name)) {
                    JOptionPane.showMessageDialog(this, "Tên dịch vụ đã tồn tại, vui lòng chọn tên khác.");
                    return;
                }
            }
        }

        // Cập nhật dịch vụ
        controller.updateService(id, name, price, unit, note);
        JOptionPane.showMessageDialog(this, "Cập nhật thành công cho dịch vụ có mã: " + id);
        loadTable();
        clearForm();
    }//GEN-LAST:event_butCapNhatActionPerformed

    private void butXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butXoaActionPerformed
        // Lấy danh sách mã dịch vụ
        List<String> idList = controller.getAllServiceIDs();
        if (idList == null || idList.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không có dịch vụ nào để xóa!");
            return;
        }
        String[] idArray = idList.toArray(new String[0]);

        // Hiện hộp thoại chọn mã dịch vụ
        String id = (String) JOptionPane.showInputDialog(
            this,
            "Chọn mã dịch vụ cần xóa:",
            "Xóa dịch vụ",
            JOptionPane.QUESTION_MESSAGE,
            null,
            idArray,
            idArray[0]
        );
        if (id == null) return; // Người dùng bấm Cancel

        Service s = controller.findByID(id);
        if (s == null) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy mã dịch vụ: " + id);
            return;
        }
        int confirm = JOptionPane.showConfirmDialog(
            this,
            "Bạn có chắc chắn muốn xóa dịch vụ: " + s.getServiceName() + "?",
            "Xác nhận xóa",
            JOptionPane.YES_NO_OPTION
        );
        if (confirm == JOptionPane.YES_OPTION) {
            boolean success = controller.deleteService(id);
            if (success) {
                JOptionPane.showMessageDialog(this, "Đã xóa dịch vụ thành công.");
                loadTable();
                clearForm();
            } else {
                JOptionPane.showMessageDialog(this, "Xóa thất bại. Vui lòng thử lại.");
            }
        }
    }//GEN-LAST:event_butXoaActionPerformed

    private void butTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butTimKiemActionPerformed
        String[] options = {"Mã dịch vụ", "Tên dịch vụ"};
        String criteria = (String) JOptionPane.showInputDialog(
            this,
            "Chọn tiêu chí tìm kiếm:",
            "Tìm kiếm dịch vụ",
            JOptionPane.PLAIN_MESSAGE,
            null,
            options,
            options[0]
        );

        if (criteria == null) return;

        String keyword = JOptionPane.showInputDialog(this, "Nhập từ khóa:");
        if (keyword == null || keyword.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập từ khóa tìm kiếm!");
            return;
        }

        keyword = keyword.trim();
        List<Service> result = new ArrayList<>();

        if (criteria.equals("Mã dịch vụ")) {
            Service s = controller.findByID(keyword);
            if (s != null) result.add(s);
        } else if (criteria.equals("Tên dịch vụ")) {
            result = controller.findByName(keyword);
        }

        tableModel.setRowCount(0);
        int stt = 1;
        for (Service s : result) {
            tableModel.addRow(new Object[]{
                stt++,
                s.getServiceID(),
                s.getServiceName(),
                s.getFormattedUnitPrice(),
                s.getUnit(),
                s.getNote()
            });
        }

        if (result.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy kết quả phù hợp.");
        }
    }//GEN-LAST:event_butTimKiemActionPerformed

    private void butDangXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butDangXuatActionPerformed
        int confirm = JOptionPane.showConfirmDialog(
            this,
            "Bạn có chắc chắn muốn đăng xuất?",
            "Xác nhận đăng xuất",
            JOptionPane.YES_NO_OPTION
        );

        if (confirm == JOptionPane.YES_OPTION) {
            this.dispose(); // Đóng giao diện quản lý hiện tại
            new com.apartmentservice.view.login.LoginFrame().setVisible(true); // Quay về màn hình đăng nhập
        }
    }//GEN-LAST:event_butDangXuatActionPerformed

    private void butLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butLamMoiActionPerformed
        loadTable();
        clearForm();        
        JOptionPane.showMessageDialog(this, "Dữ liệu đã được làm mới.");
    }//GEN-LAST:event_butLamMoiActionPerformed

    private void butThongKeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butThongKeActionPerformed
        FormSwitcher.switchForm(this, new ThongKeForm(loggedInUsername));
    }//GEN-LAST:event_butThongKeActionPerformed
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DichVuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DichVuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DichVuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DichVuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DichVuForm("Admin").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DanhSachDichVu;
    private javax.swing.JButton butCapNhat;
    private javax.swing.JButton butClear;
    private javax.swing.JButton butDangXuat;
    private javax.swing.JButton butDanhSachCuDan;
    private javax.swing.JButton butHinhThucThanhToan;
    private javax.swing.JButton butLamMoi;
    private javax.swing.JButton butQuanLyCanHo;
    private javax.swing.JButton butQuanLyDichVu;
    private javax.swing.JButton butQuanLyHoaDon;
    private javax.swing.JButton butSapXep;
    private javax.swing.JButton butThem;
    private javax.swing.JButton butThongKe;
    private javax.swing.JButton butThongTinToaNha;
    private javax.swing.JButton butTimKiem;
    private javax.swing.JButton butXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbDonGia;
    private javax.swing.JLabel lbDonViTinh;
    private javax.swing.JLabel lbGhiChu;
    private javax.swing.JLabel lbTenDichVu;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtDonViTinh;
    private javax.swing.JTextField txtGhiChu;
    private javax.swing.JTextField txtTenDichVu;
    // End of variables declaration//GEN-END:variables
}
